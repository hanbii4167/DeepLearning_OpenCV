1. 균등화, 평탄화 (Equalization)
    - 히스토그램을 활용하여 이미지의 품질을 개선하기 위한 방법
    - 화소값을 0~255 사이에 고르게 분포하도록 개선
    - cv2.equalizeHist()

2. 색공간
    - YCbcr
        : 색공간을 밝기 정보로 표현하는 방식
        : Y - 밝기정보

    - HSV
        : 색을 표혐하는 방법이자 색을 배치하는 방식
        : H(색상, 빨강녹색파랑), S(채도, 선명도), V(명도, 빛의 밝기)의 좌표를 색으로 지정


3. CLAHE(Contrast Limited Adaptive Histogram Equalization)
    - 평탄화를 하면 이미지의 밝은 부분이 날라가는 현상이 생길 수 있음
    - 이미지의 일정한 영역을 나누어 평탄화를 적용
    - 객체 = cv2.createCLAHE() -> 객체.apply(영상)

4. 정규화(normalization)
    - 특정 영역에 값이 몰려 있는 경우 화질을 개선하고, 이미지 간의 연산 시 서로 조건이 다른 경우 같은 조건으로 변경
    - cv2.normalize()
        cv2.NORM_MINMAX: 최소값과 최댓값 구산
        cv2.NORM_L1: 전체 합으로 나눔
        cv2.NORM_L2: 단위 벡터로 정규화
        cv2.NORM_IMF: 최대값으로 나눔

5. 색상 추출
    - 영상에서 지정된 범위 안에 픽셀을 선택
    - cv2.inRange()

    BGR에서의 녹색 계열
    : 0 <= B <= 100
    : 1238 <= G <= 255
    : 0<= R <= 100    --> 요 범위 안에 색상을 조합하면 녹색 계열이라 한다 !

    HSV에서의 녹색 계열
    : 50 <= H <= 80
    : 150 <= S <= 255
    : 0 <= V <= 255   --> RGB 보다 특정 색을 뽑아내기에 훨씬 좋다 !

6. 마스크 연산
    - 마스크 연산을 지원하는 픽셀 값 복사 함수
    - cv2.copyTo()