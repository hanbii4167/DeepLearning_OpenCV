1. 키보드 이벤트
    cv2.waitKey(delay)
    delay: 밀리초 단위 대기 (0보다 작거나 같으면 무한정 기다림. 기본값은 0)
    반환값 : 눌려진 키의 아스키 코드값 ( ESC : 27, ENTER : 13, TAB : 9..) -> 알고싶으면 키보드 누른다음 프린트해보면 아스키값 알 수 있다.

2. 마우스 이벤트
    cv2.setMouseCallBack(윈도우이름,콜백함수)
    윈도우 이름 : 마우스로 이벤트를 처리할 창의 이름
    콜백함수 : 마우스 이벤트가 발생할때 자동으로 호출될 함수를 설정
    -> CallBack 함수는 함수를 매개변수로 넘겨줘서 특정 이벤트나 특정 처리에 의해서 자동으로 불려지는 함수( 내가 부르는 것 x)

    콜백함수를 만드는 방법
        def 함수명 ( event, x, y, flags, param):
            pass

        event : 이벤트 객체
        x, y: 마우스 x, y 좌표
        flags: 마우스 버튼이 눌리고 있는지 , 떼졌는지 여부
        param : 추가적인 정보가 필요할 때 전달

3. 영상의 화소처리
    = 영상의 특정 좌표 픽셀 값을 변경하여 출력 영상의 좌표 픽셀을 설정하는 모든 영상

    - 밝기 조절 : 영상을 전체적으로 밝게하거나 어둡게 하는 연산
      cv2.add(), cv2.subtract(), cv2.multiply(), cv2.divide()
      cv2.addWeighted() : 두 영상의 같은 위치에 존재하는 픽셀값에 대하여 가중합을 계산하여 결과 영상의 픽셀값으로 설정 (가중치의 합은 1)
      cv2.absdiff() : 두 영상의 픽셀 값을 빼면 음수가 나올 수 있는데 해당 값에 절대값을 취한 값

4. 컬러 영상과 색
    - 컬러 영상은 3차원 배열
    - numpy.ndarray
    - img.shape : (h,w,3) -> OpenCV에서는 BGR, ( 높이, 너비, 채널 )
    - 색상 채널 분리: cv2.split(영상)
    - 색상 채널 결합 : cv2.merge(입력 영상 채널의 리스트 또는 튜플)

5. 히스토그램(histogram)
    - 영상의 픽셀값 분포를 그래프 형태로 표현
    - 예 ) 그레이스케일 영상에서 밝기 정보에 해당하는 픽셀의 개수를 구하고 막대 그래프로 표현
    - cv2.calcHist(영상, 채널, None, 빈의 개수를 나타내는 리스트, 각 차원의 최소값과 최대값으로 구성된 리스트)
        채널 : 히스토그램을 계산할 채널
        None : 특정 영역만 히스토그램을 계산할 때 사용할 마스크. None을 설정하여 전체 이미지에 대해 계산
        빈의 개수를 나타내는 리스트 : 빈의 수를 지정. 보통 256을 사용. 0~255까지
        각 차원의 촤소값과 최대값으로 구성된 리스트 : 범위를 지정. 보통 [0,255] 사용

