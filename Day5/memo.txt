1. 블러링 (Blurring)
- 초점이 맞지 않은 듯 영상을 흐릿하게 하는 작업
- 평균 블러링 : 일반적인 블러링 방법. 균일한 값을 정규화 된 커널을 이용한 이미지 블러링 방법
- 가우시안 블러링: 가우시안 분포를 갖는 커널로 블러링 하는 방법. 대상 픽셀에 가까울수록 많은 영향을 주고,
               멀어질 수록 작은 영향을 주기 때문에 원래 영상과 비슷하면서도 노이즈를 제거하는 효과가 있음 .
- 미디엄 블러링: 커널의 픽셀 값 중 중앙값을 선택 픽셀을 정렬하는 방법. 소금 - 후추 잡음을 제거하는 효과
- 바이레터럴 필터 블러링: 기존 블러링의 문제점을 해결하기 위한 방법. 일반적인 블러링은 잡음을 제거하는 효과는 뒤어났지만
                     해당 잡음의 경계도 흐릿하게 만드는 문제가 발생. 경계도 뚜렷하고 노이즈도 제거되는 효과가 있지만 속도가 느림.
    cv2.bilateralFilter( 영상, 픽셀의 거리, 시그마 컬러 범위, 시그마 스페이스 범위)

2. 필터링 연산
- 커널 또는 필터라고 하는 행동을 정의하고 이미지 위에서 이동해가며 커널과 겹쳐진 이미지 영역과 연산을 한 후 그 결과를 픽셀을 대신하여 새로운
  이미지 영역과 연산을 한 후 그 열과를 픽셀을 대신하여 새로운 이미지로 만드는 연산
    cv2.filter2D ( 영상, -1, 중심점 좌표, 추가할 값, 가장자리 화소처리)
    -1: 입력과 동일한 크기의 연산을 출력
    가장자리 화소처리
        BORDER_CONSTANT: 000a b c d e f g000
        BORDER_REPLICATE: aaa b c d e f ggg
        ...

3. 에지 (edge) 검출
- 물체의 윤곽선(경계선)이 해당
- 영상에서 화소의 밝기가 급격하게 변하는 부분
- 에지를 검출할 수 있으면 물체의 윤곽선을 알 수 있음
- "캐니 에지 검출"은 상당한 수준으로 에지를 신뢰성 있게 검출하는 방법
    cv2.Canny ( 영상, 최소임계값, 최대임계값, 커널)
    최소임계값, 최대임계값: 두 개의 경계 값 (Max. Min)을 지정해서 경계에 있는 영역픽셀을 찾음


4. 모폴로지 처리
- 영상의 밝은 영역이나 어두운 영역을 축소 또는 확대하는 기법
- cv2.getStructuringElement(구조 요소의 모양, 사이즈)
    구조 요소의 모양
    * 직사각형(cv2.MORPH_RECT)
        - 단순한 형태로 모든 요소가 같은 값을 가지는 정사각형 또는 직사각형
        - 팽창과 침식 연산에서 동일하게 작동
        - 객체 가장자리를 따라 명확한 변화를 줄 때 유용
    * 타원형(cv2.MORPH_ELLIPSE)
        - 가장자리 부분을 더 부드럽게 처리
        - 객체의 둥근 모양을 유지하면서 노이즈를 제거할 때 유용
    * 십자형(cv2.MORPH_CROSS)
        - 중심을 기준으로 수직 및 수평 방향으로 영향
        - 얇은 라인 구조를 강화하거나 제거하는 데 유용
- 침식(erosion) 연산
    - cv2.erode(영상, 구조요소, 출력영상, 고정점 위치)
    - 이미지를 깎아 내는 연산
    - 객체의 크기가 감소되고 배경이 확대
- 팽창(dilation) 연산
    - cv2.dilate(영상, 구조요소, 출력영상, 고정점 위치)
    - 물체의 주변을 확장하는 연산
    - 객체 크기가 증가되고 배경은 감소
    - 객체 내부에 홀이 있다면 홀을 채울 수도 있음

5. 레이블링(labeling)
- 이진화, 모폴로지를 수행하면 객체와 배경 영역을 구분할 수 있게 됨 -> 객체 단위 분석을 통해 각 객체를 분할하여 특징을 분석하고 객체의 위치, 크기정보,
모양 분석, ROI 추출등이 가능함 -> 서로 연결되어 있는 객체 픽셀에 고유번호를 할당하여 영역 기반 모양분석, 레이블맵 바운딩 박스, 픽셀 개수, 무게중심, 좌표
등을 반환할 수 있게 함이 목표
    - cv2.connectedComponents( 영상, 레이블맵 )
        레이블맵: 픽셀 연결 관계 ( 4방향 연결, 8방향 연결)
        반환: 객체 갯수, 레이블 맵 행렬

    -cv2.connectedComponentsWithStats( 영상, 레이블맵 )
        레이블맵: 픽셀 연결 관계 ( 4방향 연결, 8방향 연결 )
        반환: 객체 갯수, 레이블 맵 행, ( 객체위치, 가로세로길이, 면적 등 행렬 ), 무게중심정보


6. 외곽선 검출
    cv2.findContours ( 영상, 검출모드, 외곽선 좌표 근사화 방법 )
        검출모드
        cv2.RETR_EXTERNAL: 외부 외곽선만 검출
        cv2.RETR_LIST: 모든 외곽선을 검출, 계층관계는 무시
        cv2.RETR_CCOMP: 모든 외곽선을 검출, 계층 관계를 2단계로 구성
            첫번째 계층: 바깥쪽 외곽선
            두번재 계층: 내부 윤곽선
        cv2.RETR_TREE: 모든 외곽선을 검출, 전쳬 계층 관계를 구성

        근사화 방법: 외곽선 점들의 저장 방식과 정확도를 정의
        cv2.CHAIN_APPROX_NONE: 모든 외곽선의 점을 저장
        cv2.CHAIN_APPROX_SIMPLE: 수평, 수직, 대각선 방향 점들의 끝점만 저장하여 압축


    외곽선 그리기
        cv2.drawContours(영상, 외곽선 좌표 정보, 외곽선 인덱스, 색상, 두께)
        외곽선 인덱스: -1(모든 외곽선을 그림)

    외곽선 근사화
        - 검출한 외곽선 정보를 분석하여 정점수가 적은 외곽선 또는 다각형으로 표현할 수 있게 만드는 것
        - cv2.approxPolyDP(외곽선좌표, 근사화 정밀도 조절, 폐곡선 여부)
        근사화 정밀도 조절: 입력 외곽선과 근사화된 외곽선 사이의 최대 길이. 값이 작을수록 다각형이 정확해지고, 꼭지점 수가 늘어남
    외곽선의 길이 구하기
        cv2.arcLength(외곽선 좌표, 폐곡선 여부)